pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        gradlePluginPortal()
        google()
        mavenLocal()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    versionCatalogs {
        libs {
            library('material', 'com.google.android.material:material:1.7.0')
            library('android-ktx', 'androidx.core:core-ktx:1.9.0')

            library('hilt-android', 'com.google.dagger:hilt-android:2.44.2')
            library('hilt-compiler', 'com.google.dagger:hilt-compiler:2.44.2')

            bundle('hilt', ['hilt-android'])
            bundle('hiltkapt', ['hilt-compiler'])

            library('kotlin-coroutines', 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4')
            library('kotlin-serialization', 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1')

            version('room', '2.5.0')
            library('room-runtime', 'androidx.room', 'room-runtime').versionRef('room')
            library('room-ktx', 'androidx.room', 'room-ktx').versionRef('room')
            library('room-compiler', 'androidx.room', 'room-compiler').versionRef('room')
            bundle('room', ['room-runtime', 'room-ktx'])

            library('google-gson', 'com.google.code.gson:gson:2.9.0')

            library('retrofit2', 'com.squareup.retrofit2:retrofit:2.9.0')
            library('retrofit2-adapter', 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2')
            library('retrofit2-converter-gson', 'com.squareup.retrofit2:converter-gson:2.9.0')
            library('okhttp3-interceptor', 'com.squareup.okhttp3:logging-interceptor:4.9.0')
            bundle('retrofit2', ['retrofit2', 'retrofit2-adapter', 'retrofit2-converter-gson', 'okhttp3-interceptor'])

            library('arrow-core', 'io.arrow-kt:arrow-core:0.11.0')
            library('arrow-syntax', 'io.arrow-kt:arrow-syntax:0.11.0')
            library('arrow-kapt', 'io.arrow-kt:arrow-meta:0.11.0')
            bundle('arrow', ['arrow-core', 'arrow-syntax'])

            library('timber', 'com.jakewharton.timber:timber:5.0.1')

            library('firebase-crashlitycs', 'com.google.firebase', 'firebase-crashlytics-ktx').version('18.3.3')

            //-- Test ------------------------------------------------------------------------------
            library('test-junit', 'junit:junit:4.13.2')
            library('android-test-junit', 'androidx.test.ext:junit:1.1.3')
            library('mockk-main', 'io.mockk:mockk:1.13.3')
            library('test-kotlin-coroutines', 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4')
            library('test-kotlin', 'org.jetbrains.kotlin:kotlin-test:1.8.0')
            library('test-junit-ktx', 'androidx.test.ext:junit-ktx:1.1.5')
            library('test-mockk', "io.mockk:mockk:1.13.3")

        }
    }
}
rootProject.name = "OMtest"
include ':app'
